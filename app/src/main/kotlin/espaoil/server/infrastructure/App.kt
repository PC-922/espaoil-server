/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package espaoil.server.infrastructure

import com.mongodb.client.MongoClient
import com.mongodb.client.MongoCollection
import com.mongodb.client.MongoDatabase
import espaoil.server.application.usecases.UpdateGasStations
import espaoil.server.infrastructure.adapters.GasStationPersisterMongo
import espaoil.server.infrastructure.adapters.GasStationsRetrieverFromSpanishGovernment
import espaoil.server.infrastructure.api.ApiServer
import espaoil.server.infrastructure.dtos.persistence.GasStationDto
import espaoil.server.infrastructure.schedulers.GasStationScheduler
import espaoil.server.infrastructure.utils.URLWrapper
import org.litote.kmongo.KMongo
import org.litote.kmongo.getCollectionOfName
import java.util.concurrent.TimeUnit.MINUTES

private const val INITIAL_DELAY = 0L
private const val PERIOD = 30L

fun main() {
    val gasStationPersister = GasStationPersisterMongo(mongoCollection())

    GasStationScheduler.start({
        UpdateGasStations(
            GasStationsRetrieverFromSpanishGovernment(URLWrapper()),
            gasStationPersister
        ).execute()
    }, INITIAL_DELAY, PERIOD, MINUTES)

    ApiServer(gasStationPersister).startAsync()
}

private fun mongoCollection(): MongoCollection<GasStationDto> {
    val client: MongoClient = KMongo.createClient(System.getenv("DATABASE_URL"))
    val database: MongoDatabase = client.getDatabase("espaoil")
    return database.getCollectionOfName<GasStationDto>("gas_stations")
}
